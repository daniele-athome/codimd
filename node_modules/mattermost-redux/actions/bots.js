"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createBot = createBot;
exports.patchBot = patchBot;
exports.loadBot = loadBot;
exports.loadBots = loadBots;
exports.disableBot = disableBot;
exports.enableBot = enableBot;
exports.assignBot = assignBot;

var _client = require("../client");

var _action_types = require("../action_types");

var _helpers = require("./helpers");

// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.
// See LICENSE.txt for license information.
var BOTS_PER_PAGE_DEFAULT = 20;

function createBot(bot) {
  return (0, _helpers.bindClientFunc)({
    clientFunc: _client.Client4.createBot,
    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,
    params: [bot]
  });
}

function patchBot(botUserId, botPatch) {
  return (0, _helpers.bindClientFunc)({
    clientFunc: _client.Client4.patchBot,
    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,
    params: [botUserId, botPatch]
  });
}

function loadBot(botUserId) {
  return (0, _helpers.bindClientFunc)({
    clientFunc: _client.Client4.getBot,
    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,
    params: [botUserId]
  });
}

function loadBots() {
  var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var perPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BOTS_PER_PAGE_DEFAULT;
  return (0, _helpers.bindClientFunc)({
    clientFunc: _client.Client4.getBotsIncludeDeleted,
    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNTS,
    params: [page, perPage]
  });
}

function disableBot(botUserId) {
  return (0, _helpers.bindClientFunc)({
    clientFunc: _client.Client4.disableBot,
    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,
    params: [botUserId]
  });
}

function enableBot(botUserId) {
  return (0, _helpers.bindClientFunc)({
    clientFunc: _client.Client4.enableBot,
    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,
    params: [botUserId]
  });
}

function assignBot(botUserId, newOwnerId) {
  return (0, _helpers.bindClientFunc)({
    clientFunc: _client.Client4.assignBot,
    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,
    params: [botUserId, newOwnerId]
  });
}