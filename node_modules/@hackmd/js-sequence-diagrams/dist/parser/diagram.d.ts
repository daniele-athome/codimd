/**
 * js sequence diagrams
 * https://bramp.github.io/js-sequence-diagrams/
 * (c) 2012-2017 Andrew Brampton (bramp.net)
 * Simplified BSD license.
 */
import { ArrowType, LineType, Placement } from './enum';
import { Actor, Note, Signal } from './model';
export declare class Diagram {
    static Actor: typeof Actor;
    static Signal: typeof Signal;
    static Note: typeof Note;
    static LineType: typeof LineType;
    static ArrowType: typeof ArrowType;
    static Placement: typeof Placement;
    /**
     * Turn "\\n" into "\n"
     * @param s
     */
    static unescape(s: string): string;
    static parse(input: string): Diagram;
    title?: string;
    actors: Actor[];
    signals: Signal[];
    private parseError;
    /**
     * Return an existing actor with this alias, or creates a new one with alias and name.
     * @param inputAlias
     * @param name
     */
    getActor(inputAlias: string, name: string): Actor;
    /**
     * Parses the input as either a alias, or a "name as alias", and returns the corresponding actor.
     * @param input
     */
    getActorWithAlias(input: string): Actor;
    setTitle(title: string): void;
    addSignal(signal: Signal): void;
}
