/// <reference types="raphael" />
import { BaseDrawer, IHashMap } from './BaseDrawer';
import { Diagram } from '../../parser/diagram';
import { ArrowType, LineType } from '../../parser/enum';
interface IRaphaelDrawerOptions {
    ['font-size']?: string;
    ['font-family']?: string;
}
interface IRaphaelFont extends IHashMap {
    obj_?: RaphaelFont;
    ['font-size']?: number;
}
export declare class RaphaelDrawer extends BaseDrawer {
    static cleanText(text: string): string;
    private paper;
    private arrowTypes;
    private lineTypes;
    constructor(diagram: Diagram, options: IRaphaelDrawerOptions);
    draw(container: HTMLElement): void;
    setupCanvas(container: HTMLElement): void;
    resize(width: number, height: number): void;
    textBBox(rawText: string, font?: IRaphaelFont): BoundingBox;
    drawRect(x: number, y: number, w: number, h: number): void;
    drawText(x: number, y: number, rawText: string, font?: IRaphaelFont, align?: number): RaphaelElement;
    drawLine(x1: number, y1: number, x2: number, y2: number, lineType?: LineType, arrowHead?: ArrowType): RaphaelElement;
}
export {};
